bool rec(long long divisor1,long long divisor2,long long uniqueCnt1,long long uniqueCnt2,long long mid){
    long long divbydiv1=mid/divisor1;
    long long divbydiv2=mid/divisor2;
    long long notdivbydiv1=mid-divbydiv1;
    long long notdivbydiv2=mid-divbydiv2;
    long long  notdivbyboth=mid-(mid/(lcm(divisor1,divisor2)));
    if(notdivbydiv1>=uniqueCnt1 && notdivbydiv2>=uniqueCnt2 && notdivbyboth>=uniqueCnt1 + uniqueCnt2)
    return 1;
    return 0;

}
    int minimizeSet(int divisor1, int divisor2, int uniqueCnt1, int uniqueCnt2) {
        long long l=1;
        long long h=INT_MAX;
        long long ans=INT_MAX;
        while(l<=h){
            long long mid=l+(h-l)/2;
            if(rec(divisor1,divisor2,uniqueCnt1,uniqueCnt2,mid))
            {
                ans=min(ans,mid);
                h=mid-1;
            }
            else
            l=mid+1;
        }
        return int(ans);
    }
